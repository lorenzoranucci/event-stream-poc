version: '3.8'

services:
  event-stream-golang:
    container_name: pp_event_stream_golang
    build: ./
    env_file:
      - ./.env
      - ./.env.dist
    entrypoint: /bin/event-stream-golang server
    working_dir: /srv
    volumes:
      - ./:/srv:cached
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:

#  event-stream-golang-review-created-consumer:
#    container_name: pp_event_stream_golang_review_created_consumer
#    build: ./
#    env_file:
#      - ./.env
#      - ./.env.dist
#    entrypoint: /bin/event-stream-golang consume-review-created
#    working_dir: /srv
#    volumes:
#      - ./:/srv:cached
#    deploy:
#      restart_policy:
#        condition: on-failure
#    networks:
#      ppro:

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:

  kafka:
    image: docker.io/bitnami/kafka:3
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:

  mariadb:
    image: mariadb:10.6.4
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=reviews
    networks:
      ppro:

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  ppro:
    driver: "bridge"
