version: '3.8'

services:
  event-stream-golang:
    container_name: pp_event_stream_golang
    image: golang:1.17.2
    env_file: ./.env.dist
    command: go run cmd/event-stream-golang/main.go server
    working_dir: /srv
    volumes:
      - ./:/srv:cached
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:

  event-stream-golang-review-created-consumer:
    container_name: pp_event_stream_golang_review_created_consumer
    image: golang:1.17.2
    env_file: ./.env.dist
    command: go run cmd/event-stream-golang/main.go consume-review-created
    working_dir: /srv
    volumes:
      - ./:/srv:cached
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:
  kafka:
    image: docker.io/bitnami/kafka:3
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      ppro:

  pulsar:
    image: apachepulsar/pulsar:2.8.1
    ports:
      - "8081:8081"
      - "6650:6650"
    environment:
      - BOOKIE_MEM=" -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    command: >
      /bin/bash -c
      "bin/apply-config-from-env.py /conf/pulsar.conf
      && exec bin/pulsar standalone --advertised-address pulsar"
    volumes:
      - ./conf:/conf:cached
    networks:
      ppro:
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  ppro:
    driver: "bridge"
